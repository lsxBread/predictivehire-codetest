version: '2'

services:
  graphql-server:
    container_name: prod-graphql-server-4000-4000
    build:
      context: graphql-server-4000
      dockerfile: Dockerfile
      args:
        - PORT=${GRAPHQL_SERVER_PORT} 
    image: prod-graphql-server-image
    ports:
      - '${GRAPHQL_SERVER_PORT}:${GRAPHQL_SERVER_PORT}'
    environment:
      - PORT=${GRAPHQL_SERVER_PORT}
       
  api-gateway:
    container_name: prod-api-gateway-3000
    build:
      context: api-gateway-3000
      dockerfile: Dockerfile
      args:
        - PORT=${API_GATEWAY_PORT}
    image: prod-api-gateway-image
    ports:
      - '${API_GATEWAY_PORT}:${API_GATEWAY_PORT}'
    environment:
      - PORT=${API_GATEWAY_PORT}
      - USER_SERVICE_HOST=${USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - COMPANY_SERVICE_HOST=${COMPANY_SERVICE_HOST}
      - COMPANY_SERVICE_PORT=${COMPANY_SERVICE_PORT}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - VACANCY_SERVICE_PORT=${VACANCY_SERVICE_PORT}
      - VACANCY_SERVICE_HOST=${VACANCY_SERVICE_HOST}
    networks:
      - predictivehire
    depends_on:
      - user-service
      - auth-service
      - company-service

  auth-service:
    container_name: prod-auth-service-8080
    build:
      context: microservices/auth-service-8080
      dockerfile: Dockerfile
      args:
        - PORT=${AUTH_SERVICE_PORT}
    image: prod-auth-service-image
    ports:
      - '${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}'
    environment:
      - PORT=${AUTH_SERVICE_PORT}
      - USER_SERVICE_HOST=${USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
    networks:
      - predictivehire

  user-service:
    container_name: prod-user-service-8001
    build:
      context: microservices/user-service-8001
      dockerfile: Dockerfile
      args:
        - PORT=${USER_SERVICE_PORT}
    image: prod-user-service-image
    ports:
      - '${USER_SERVICE_PORT}:${USER_SERVICE_PORT}'
    environment:
      - PORT=${USER_SERVICE_PORT}
      - DB_URL=mongodb://prod-user-service-mongo-db/users
    networks:
      - predictivehire
      - user-service-private-network
    depends_on:
      - user-service-mongo-db

  vacancy-service:
    container_name: prod-vacancy-service-8002
    build:
      context: microservices/vacancy-service-8002
      dockerfile: Dockerfile
      args:
        - PORT=${VACANCY_SERVICE_PORT}
    image: prod-vacancy-service-image
    ports:
      - '${VACANCY_SERVICE_PORT}:${VACANCY_SERVICE_PORT}'
    environment:
      - PORT=${VACANCY_SERVICE_PORT}
      - DB_URL=mongodb://prod-vacancy-service-mongo-db/vacancy
    networks:
      - predictivehire
      - vacancy-service-private-network
    depends_on:
      - vacancy-service-mongo-db

  company-service:
    container_name: prod-company-service-8003
    build:
      context: microservices/company-service-8003
      dockerfile: Dockerfile
      args:
        - PORT=${COMPANY_SERVICE_PORT}
    image: prod-company-service-image
    ports:
      - '${COMPANY_SERVICE_PORT}:${COMPANY_SERVICE_PORT}'
    environment:
      - PORT=${COMPANY_SERVICE_PORT}
      - DB_URL=mongodb://prod-company-service-mongo-db/company
    networks:
      - predictivehire
      - company-service-private-network
    depends_on:
      - company-service-mongo-db

  user-service-mongo-db:
    image: mongo
    container_name: prod-user-service-mongo-db
    volumes:
      - users_data:/data/configdb
      - users_data:/data/db
    ports:
      - 27017:27017
    networks:
      - user-service-private-network

  vacancy-service-mongo-db:
    image: mongo
    container_name: prod-vacancy-service-mongo-db
    volumes:
      - vacancies_data:/data/configdb
      - vacancies_data:/data/db
    ports:
      - 27018:27017
    networks:
      - vacancy-service-private-network

  company-service-mongo-db:
    image: mongo
    container_name: prod-company-service-mongo-db
    volumes:
      - companys_data:/data/configdb
      - companys_data:/data/db
    ports:
      - 27019:27017
    networks:
      - company-service-private-network

networks:
  predictivehire:
  user-service-private-network:
  vacancy-service-private-network:
  company-service-private-network:

volumes:
  users_data:
  vacancies_data:
  companys_data:
